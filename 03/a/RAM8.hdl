// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address, a=lr0, b=lr1, c=lr2, d=lr3, e=lr4, f=lr5, g=lr6, h=lr7);

    Register(in=in, load=lr0, out=vr0);
    Register(in=in, load=lr1, out=vr1);
    Register(in=in, load=lr2, out=vr2);
    Register(in=in, load=lr3, out=vr3);
    Register(in=in, load=lr4, out=vr4);
    Register(in=in, load=lr5, out=vr5);
    Register(in=in, load=lr6, out=vr6);
    Register(in=in, load=lr7, out=vr7);

    Mux8Way16(a=vr0, b=vr1, c=vr2, d=vr3, e=vr4, f=vr5, g=vr6, h=vr7, sel=address, out=out);
}